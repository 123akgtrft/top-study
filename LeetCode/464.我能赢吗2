class Solution {
    Map<Integer,Boolean> memo=new HashMap();
    public boolean canIWin(int maxChoosableInteger, int desiredTotal) {
        if((1+maxChoosableInteger)*maxChoosableInteger/2<desiredTotal)return false;
        return dfs(maxChoosableInteger,0,desiredTotal,0);
    }
    public boolean dfs(int maxChoosableInteger,int space, int desiredTotal, int current) {
        if (!memo.containsKey(space)) {
            boolean sign=false;
            for (int i = 0; i < maxChoosableInteger; i++) {
                if (((space>>i)&1)==0){
                    if (current + i + 1 >= desiredTotal) {//自己成功
                        sign=true;
                        break;
                    }
                    if(!dfs(maxChoosableInteger,space|(1<<i), desiredTotal, current + i + 1)){//别人失败
                        sign=true;
                        break;
                    }
                }
            }
            memo.put(space, sign);
        }
        return memo.get(space);
    }
}
