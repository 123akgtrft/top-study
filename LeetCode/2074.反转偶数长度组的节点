
struct ListNode*reverse(struct ListNode*head,struct ListNode*tail){
    if(head->next==tail)
    return head;
    struct ListNode*p1=reverse(head->next,tail);
    head->next->next=head;
    head->next=NULL;
    return p1;
}
struct ListNode* reverseEvenLengthGroups(struct ListNode* head){
    if(head->next==NULL)
    return head;
    struct ListNode*p1=head,*p2=head->next,*next=NULL;
    int step=2;
    while(1){
        int len=0;
        for(int i=0;i<step;i++){
            p2=p2->next;
            len++;
            if(p2==NULL)
                break;
        }
        if(len%2==0){//反转的情况
            p1->next=reverse(p1->next,p2);
            while(p1->next!=NULL)
                p1=p1->next;
            p1->next=p2;//p1会自动跟上
        }
        else{//需要手动让p1走到p2之前的一位
            while(p1->next!=p2)
            p1=p1->next;
        }
        if(p2==NULL)
        break;
        step++;
        
    }
    return head;
}
